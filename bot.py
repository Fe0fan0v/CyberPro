from telebot import types
from exif import Image
import numpy as np
import datetime
import tempfile
import logging
import telebot
import time
from main import add_complaint, add_thanks, add_sentense
import os

# -------------------------------------------------------------------------------------------------------------------------------------
complain_level = 0
# -------------------------------------------------------------------------------------------------------------------------------------
offer_level = 0
# -------------------------------------------------------------------------------------------------------------------------------------
gratitude_level = 0
# -------------------------------------------------------------------------------------------------------------------------------------
bot = telebot.TeleBot('1813697722:AAHP7kjaJrZ5iMOSxnUgX_nmYT5LBMTd-0A')
# -------------------------------------------------------------------------------------------------------------------------------------

output_data = {}
before_output_data = []

# -------------------------------------------------------------------------------------------------------------------------------------
f = open("log.txt", "w")
f.close()


# -------------------------------------------------------------------------------------------------------------------------------------
def write_message(message, text):
    try:
        bot.send_message(message.chat.id, text)
    except Exception as error_message:
        logging.error(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
        log = open("log.txt", "a", encoding="UTF-8")
        log.write(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
        log.close()


def photo_download(message, get_type):
    global before_output_data
    try:
        file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        current_file_exstension = (str(file_info.file_path)).split('.')[-1]
        temp_dir = tempfile.mkdtemp()
        src = temp_dir + fr'\saved_photo.{current_file_exstension}'
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
            new_file.close()

        with open(src, 'rb') as file:
            before_output_data.append(file.read())

        if get_type == 1:
            before_output_data.append(datetime.datetime.now().strftime("%d.%m.%y %H:%M"))
            asc_location(message)
        elif get_type == 2:
            create_output_data()
    except Exception as error_message:
        logging.error(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
        log = open("log.txt", "a", encoding="UTF-8")
        log.write(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
        log.close()


def asc_location(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_geo = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ  ", request_location=True)
    keyboard.add(button_geo)
    try:
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ –∫–∞—Ä—Ç–µ üó∫"
                                          "(–¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–¥–æ –≤–∫–ª—é—á–∏—Ç—å –≥–µ–æ–¥–∞–Ω–Ω—ã–µ).", reply_markup=keyboard)
    except Exception as error_message:
        logging.error(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
        log = open("log.txt", "a", encoding="UTF-8")
        log.write(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
        log.close()


def create_output_data():
    global output_data, before_output_data
    try:
        if before_output_data[0] == "Complain":
            output_data["Name"] = before_output_data[1]
            output_data["Description"] = before_output_data[2]
            output_data["Bite-photo"] = before_output_data[3]
            output_data["Date"] = before_output_data[4]
            output_data["Location"] = before_output_data[5]
            output_data["Type"] = before_output_data[6]
        elif before_output_data[0] == "Gratitude":
            output_data["Name"] = before_output_data[1]
            output_data["Description"] = before_output_data[2]
            output_data["Bite-photo"] = before_output_data[3]
            output_data["Date"] = before_output_data[4]
        elif before_output_data[0] == "Offer":
            output_data["Name"] = before_output_data[1]
            output_data["Description"] = before_output_data[2]
            output_data["Files"] = before_output_data[3]
            output_data["Date"] = before_output_data[4]
        if output_data:
            pass
        else:
            return
        if before_output_data[0] == "Complain":
            if ["Bite-photo", "Description", "Location", "Name"] == list(output_data.keys()).sort():
                add_complaint(coordinates=f'{output_data["Location"][0]},{output_data["Location"][1]}',
                              name=output_data["Name"], description=output_data["Description"],
                              photo=output_data["Bite-photo"], date=output_data["Date"])
                output_data = {}
        elif before_output_data[0] == "Gratitude":
            if ["Bite-photo", "Description", "Name"] == list(output_data.keys()).sort():
                add_thanks(coordinates=f'{output_data["Location"][0]},{output_data["Location"][1]}',
                           name=output_data["Name"], description=output_data["Description"],
                           photo=output_data["Bite-photo"])
                output_data = {}
        elif before_output_data[0] == "Offer":
            add_sentense(description=output_data["Description"],
                         file=output_data["Files"])
            output_data = {}
    except Exception as error_message:
        logging.error(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
        log = open("log.txt", "a", encoding="UTF-8")
        log.write(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
        log.close()


# -------------------------------------------------------------------------------------------------------------------------------------
@bot.message_handler(content_types=['location'])
def location(message):
    global complain_level
    if message.location:
        try:
            before_output_data.append(message.location)
            complain_level += 1

            # -------------------------------------------------------------------------------------------------------------------------
            keyboard = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
            for i in [types.KeyboardButton(text="–î–æ—Ä–æ–∂–Ω–∞—è üõ£"), types.KeyboardButton(text="–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è üå±"),
                      types.KeyboardButton(text="–°–æ—Ü–∏–∞–ª—å–Ω–∞—è ü§∑"), types.KeyboardButton(text="–ñ–ö–• üèö"),
                      types.KeyboardButton(text="–î—Ä—É–≥–æ–µ üß©")]:
                keyboard.add(i)
            bot.send_message(message.chat.id, "–í –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–±–ª–µ–º—ã:", reply_markup=keyboard)
        except Exception as error_message:
            logging.error(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
            log = open("log.txt", "a", encoding="UTF-8")
            log.write(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
            log.close()
    else:
        write_message(message, "–ü—Ä–æ–±–ª–µ–º—ã —Å –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑")


@bot.message_handler(commands=['start'])
def welcome(message):
    try:
        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button_appeal = types.KeyboardButton(text="–ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É ‚ùó")
        button_proposal = types.KeyboardButton(text="–í—ã–¥–≤–∏–Ω—É—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ  ‚úÖ")
        button_gratitude = types.KeyboardButton(text="–í—ã—Ä–∞–∑–∏—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å üíØ")
        keyboard.add(button_appeal, button_proposal, button_gratitude)
        bot.send_message(message.chat.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}! –í—ã–±–∏—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                         reply_markup=keyboard)
    except Exception as error_message:
        logging.error(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
        log = open("log.txt", "a", encoding="UTF-8")
        log.write(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
        log.close()


@bot.message_handler(commands=['help'])
def welcome(message):
    try:
        write_message(message, '–í—ã–±–∏—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å.')
        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button_appeal = types.KeyboardButton(text="–ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É ‚ùó")
        button_proposal = types.KeyboardButton(text="–í—ã–¥–≤–∏–Ω—É—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ  ‚úÖ")
        button_gratitude = types.KeyboardButton(text="–í—ã—Ä–∞–∑–∏—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å üíØ")
        keyboard.add(button_appeal, button_proposal, button_gratitude)
        bot.send_message(message.chat.id, '–í—ã–±–∏—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=keyboard)
    except Exception as error_message:
        logging.error(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
        log = open("log.txt", "a", encoding="UTF-8")
        log.write(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
        log.close()


@bot.message_handler(content_types=['text', 'photo'])
def start(message):
    global complain_level, before_output_data, offer_level, gratitude_level
    try:
        if message.text:
            response = message.text.lower()
        else:
            response = ""

        if response == "–ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É ‚ùó":
            complain_level = 1
            before_output_data = ["Complain"]
            gratitude_level, offer_level = 0, 0
            write_message(message, "–ù–∞–ø–∏—à–∏—Ç–µ, –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã")
        elif response == "–≤—ã–¥–≤–∏–Ω—É—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ  ‚úÖ":
            before_output_data = ["Offer"]
            write_message(message, "–ö—Ä–∞—Ç–∫–æ –Ω–∞–∑–æ–≤–∏—Ç–µ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ")
            gratitude_level, complain_level = 0, 0
            offer_level = 1
        elif response == "–≤—ã—Ä–∞–∑–∏—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å üíØ":
            before_output_data = ["Gratitude"]
            write_message(message, "–î–∞–π—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ")
            offer_level, complain_level = 0, 0
            gratitude_level = 1

        elif complain_level != 0:
            if complain_level == 1:
                before_output_data.append(message.text)
                complain_level += 1
                write_message(message, "–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–ø–æ–¥—Ä–æ–±–Ω–µ–π")
            elif complain_level == 2:
                before_output_data.append(message.text)
                complain_level += 1
                write_message(message, "–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ üñº")
            elif complain_level == 3:
                photo_download(message, 1)
            elif complain_level == 4:
                before_output_data.append(message.text)
                create_output_data()
                complain_level = 0
                before_output_data = []
                keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                button_appeal = types.KeyboardButton(text="–ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É ‚ùó")
                button_proposal = types.KeyboardButton(text="–í—ã–¥–≤–∏–Ω—É—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ  ‚úÖ")
                button_gratitude = types.KeyboardButton(text="–í—ã—Ä–∞–∑–∏—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å üíØ")
                keyboard.add(button_appeal, button_proposal, button_gratitude)
                bot.send_message(message.chat.id,
                                 "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–æ—è–≤–ª—è–µ—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! –ñ–∞–ª–æ–±–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è",
                                 reply_markup=keyboard)
        elif offer_level != 0:
            if offer_level == 1:
                before_output_data.append(message.text)
                offer_level += 1
                write_message(message, "–û–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ø–æ–¥—Ä–æ–±–Ω–µ–π")
            elif offer_level == 2:
                before_output_data.append(message.text)
                offer_level += 1
                write_message(message, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º—ã–º –æ–±—ä–µ–∫—Ç–æ–º üñº")
            elif offer_level == 3:
                photo_download(message, 2)
                keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                button_appeal = types.KeyboardButton(text="–ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É ‚ùó")
                button_proposal = types.KeyboardButton(text="–í—ã–¥–≤–∏–Ω—É—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ  ‚úÖ")
                button_gratitude = types.KeyboardButton(text="–í—ã—Ä–∞–∑–∏—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å üíØ")
                keyboard.add(button_appeal, button_proposal, button_gratitude)
                bot.send_message(message.chat.id,
                                 "–ë–ª–∞–≥–æ–¥–æ—Ä–∏–º –∑–∞ –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –í—Å–∫–æ—Ä–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ",
                                 reply_markup=keyboard)
                offer_level = 0
                before_output_data = []

        elif gratitude_level != 0:
            if gratitude_level == 1:
                before_output_data.append(message.text)
                gratitude_level += 1
                write_message(message, "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å")
            elif gratitude_level == 2:
                before_output_data.append(message.text)
                gratitude_level += 1
                write_message(message, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –æ–±—ä–µ–∫—Ç–æ–º üñº")
            elif gratitude_level == 3:
                photo_download(message, 2)

                keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                button_appeal = types.KeyboardButton(text="–ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É ‚ùó")
                button_proposal = types.KeyboardButton(text="–í—ã–¥–≤–∏–Ω—É—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ  ‚úÖ")
                button_gratitude = types.KeyboardButton(text="–í—ã—Ä–∞–∑–∏—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å üíØ")
                keyboard.add(button_appeal, button_proposal, button_gratitude)
                bot.send_message(message.chat.id,
                                 "–ù–∞–º –æ—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–∞ –≤–∞—à–∞ –æ—Ü–µ–Ω–∫–∞. –ë—É–¥–µ–º –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ",
                                 reply_markup=keyboard)

                gratitude_level = 0
                before_output_data = []
        else:
            write_message(message, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞.")

    except Exception as error_message:
        logging.error(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
        log = open("log.txt", "a", encoding="UTF-8")
        log.write(str(error_message) + "  ‚îã  " + time.ctime() + "\n")
        log.close()


# -------------------------------------------------------------------------------------------------------------------------------------
bot.polling(none_stop=True, interval=0)

"""

1) –í—Å—Ç–∞–≤–∏—Ç—å —ç—Ç–æ –≤ –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞:
    –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∂–∞–ª–æ–±, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π.\n 
    –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —Ñ–æ—Ä–º—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∏–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞–ø–∏—à–∏—Ç–µ /help

"""
